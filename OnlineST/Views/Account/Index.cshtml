
@{
    ViewData["Title"] = "Fazer login ou criar conta";
    Layout = "~/Views/Shared/_Layout.cshtml";


}


<link href="~/css/LoginStyle.css" rel="stylesheet" />

@model OnlineST.Models.ViewModel.UserViewModel

<div class="d-flex flex-wrap flex-row marginTop10px gap-3 h-100 w-100 justify-content-center">

    <form class="form" method="post" style="height:400px;">
        <h3>Criar conta</h3>
        <div class="d-flex fixedFlexColumn flex-column gap-3">

            <input class="align-self-center text-center" type="email" placeholder="Email"
                   asp-for="Email" />

            <input class="align-self-center text-center" type="password" placeholder="Senha"
                   asp-for="Password" />

            <input class="align-self-center text-center" type="password" placeholder="Confirmar senha"
                   asp-for="ConfirmPassword" />

            <div class="d-flex flex-row center gap-3">
                @foreach (var item in Model.SelectedUserTypes)
                {
                    <div class="radioDiv" onclick="DivRadioClick('@item.UserTypeName')">

                        @*se recusou a funcionar*@
                        @*<input id="@item.UserTypeName" class="margin5px" type="radio" name="UserType"
                    asp-for="selectedUserType" value="@item.UserType"/>*@

                        @Html.RadioButtonFor(p => p.selectedUserType, item.UserType, new { id = item.UserTypeName, @checked = item.IsSelected })
                        <label>@item.UserTypeName</label>
                    </div>
                }
            </div>

            @if (TempData.TryGetValue("UserRegistered", out object userRegistered) && (bool)userRegistered)
            {
                <div class="alert alert-success border-success center">
                    <span>Conta criada com sucesso</span>
                </div>
            }

            else if (TempData.TryGetValue("RegisterError", out object registerError) && (bool)registerError)
            {
                <div class="alert alert-danger border-danger center">
                    <span>Favor preencher todos os campos</span>
                </div>
            }

            else if (TempData.TryGetValue("AccountAlreadyExists", out object accountExists) && (bool)accountExists)
            {
                <div class="alert alert-danger border-danger center">
                    <span>O email @Model.Email já está registrado</span>
                </div>
            }
            else if (TempData.TryGetValue("ConfirmationDontMatch", out object confirmationDontMatch) && (bool)confirmationDontMatch)
            {
                <div class="alert alert-danger border-danger center">
                    <span>Confirmação de senha falhou</span>
                </div>
            }

            <button class="button" type="submit" asp-controller="Account" asp-action="CreateAccount">Criar conta</button>
        </div>
    </form>
    <form class="form" method="post" style="height:400px;">
        <h3>Logar</h3>
        <div class="d-flex fixedFlexColumn flex-column gap-3 h-100">

            <input class="align-self-center text-center" type="email" placeholder="Email"
                   asp-for="Email" />
            <input class="align-self-center text-center" type="password" placeholder="Senha"
                   asp-for="Password" />

            @if (TempData.TryGetValue("UserDontExist", out object userDontExists) && (bool)userDontExists)
            {
                <div class="alert alert-danger border-danger center">
                    <span>Usuário para o email registrado não existe</span>
                </div>
            }
            else if (TempData.TryGetValue("LoginErrorEmptyFields", out object loginErrorEmptyFields) && (bool)loginErrorEmptyFields)
            {
                <div class="alert alert-danger border-danger center">
                    <span>Favor preencher todos os campos</span>
                </div>
            }
            else if (TempData.TryGetValue("IncorrectLogin", out object incorrectLogin) && (bool)incorrectLogin)
            {
                <div class="alert alert-danger border-danger center">
                    <span>Login incorreto</span>
                </div>
            }

            <button class="button" type="submit" asp-controller="Account" asp-action="Login">Logar</button>
        </div>
    </form>
</div>

<script type="text/javascript" src="~/js/site.js"></script>
